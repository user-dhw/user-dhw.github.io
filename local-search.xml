<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于原生实现拖拽排序</title>
    <link href="/2022/11/24/%E5%9F%BA%E4%BA%8E%E5%8E%9F%E7%94%9F%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%8B%BD%E6%8E%92%E5%BA%8F/"/>
    <url>/2022/11/24/%E5%9F%BA%E4%BA%8E%E5%8E%9F%E7%94%9F%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%8B%BD%E6%8E%92%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/89d94bbfdebf4f72b1312bb1f1e84556~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h2 id="话不多说直接上代码"><a href="#话不多说直接上代码" class="headerlink" title="话不多说直接上代码"></a>话不多说直接上代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;!<span class="hljs-variable constant_">DOCTYPE</span> html&gt;<br>&lt;html lang=&quot;en&quot;&gt;<br>&lt;head&gt;<br>  &lt;meta charset=&quot;UTF-8&quot;&gt;<br>  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;<br>  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;<br>  &lt;title&gt;Document&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;style&gt;<br>  .list-item &#123;<br>    width: 300px;<br>    height: 30px;<br>    margin: 20px;<br>    text-align: center;<br>    line-height: 30px;<br>    border-radius: 5px;<br>    background: rgba(32, 138, 191, 0.776);<br>  &#125;<br>  .list-item.moving &#123;<br>    background: transparent;<br>    color: transparent;<br>    border: 1px dashed #ccc;<br>  &#125;<br>&lt;/style&gt;<br>&lt;body&gt;<br>  &lt;div class=&quot;list&quot;&gt;<br>    &lt;div draggable=&quot;true&quot; class=&quot;list-item&quot;&gt;1&lt;/div&gt;<br>    &lt;div draggable=&quot;true&quot; class=&quot;list-item&quot;&gt;2&lt;/div&gt;<br>    &lt;div draggable=&quot;true&quot; class=&quot;list-item&quot;&gt;3&lt;/div&gt;<br>    &lt;div draggable=&quot;true&quot; class=&quot;list-item&quot;&gt;4&lt;/div&gt;<br>    &lt;div draggable=&quot;true&quot; class=&quot;list-item&quot;&gt;5&lt;/div&gt;<br>  &lt;/div&gt;<br>  &lt;script&gt;<br>    const list = document.querySelector(&#x27;.list&#x27;);<br>    let node<br>    list.ondragstart = function (e) &#123;<br>      setTimeout(() =&gt; &#123;<br>        e.target.classList.add(&#x27;moving&#x27;);<br>      &#125;)<br>      node = e.target;<br>      e.dataTransfer.effectAllowed = &#x27;move&#x27;;<br>    &#125;<br>    list.ondragover = function (e) &#123;<br>      e.preventDefault();<br>    &#125;<br>    list.ondragenter = function (e) &#123;<br>      e.preventDefault();<br>      if (e.target == list || e.target == node) &#123;<br>        return<br>      &#125;<br>      const children = Array.from(list.children)<br>      const nodeIndex = children.indexOf(node)<br>      const targetIndex = children.indexOf(e.target)<br>      if (nodeIndex &lt; targetIndex) &#123;<br>        // 从上往下拖动<br>        list.insertBefore(node, e.target.nextElementSibling)<br>      &#125; else &#123;<br>        // 从下往上拖动<br>        list.insertBefore(node, e.target)<br>      &#125;<br>    &#125;<br>    list.ondragend = (e) =&gt; &#123;<br>      e.target.classList.remove(&#x27;moving&#x27;);<br>    &#125;<br>  &lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Vue中router和route的区别</title>
    <link href="/2022/11/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <url>/2022/11/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="router"><a href="#router" class="headerlink" title="router"></a><strong>router</strong></h2><p>router 是 VueRouter 的实例对象,也是一个全局的路由对象，里面有很多的属性和方法比如：</p><h4 id="router-push："><a href="#router-push：" class="headerlink" title="router.push："></a>router.push：</h4><p>跳转链接就可以用  <code>this.$router.push，和router-link跳转一样</code></p><h4 id="router-replace"><a href="#router-replace" class="headerlink" title="router.replace():"></a>router.replace():</h4><p>跟 router.push 作用是一样的，但是它不会向 history 添加新记录，而是跟它的方法名一样替换掉当前的 history 记录.</p><h4 id="router-go-n"><a href="#router-go-n" class="headerlink" title="router.go(n):"></a>router.go(n):</h4><p>这个方法的参数是一个整数，意思是在 history 记录中向前或者后退多少步，window.history.Go(n)</p><h2 id="route"><a href="#route" class="headerlink" title="route"></a><strong>route</strong></h2><p>route 是当前正在跳转的路由对象，可以从 route 里面获取 hash，name ，path，query，params， fullPath 等属性方法比如接受参数时使用<br><strong>this.$route.query.参数名 —- this.route.params.参数名</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
